@import "vars";

$use-label: true !default;

/*
==========================================================================
 LABEL
==========================================================================
*/

//
// @mixins
//
// We use this mixin to create a default label base.
@mixin label-base {
  font-weight: $label-font-weight;
  font-family: $label-font-family;
  text-align: center;
  text-decoration: none;
  line-height: 1;
  white-space: nowrap;
  display: inline-block;
  position: relative;
  margin-bottom: inherit;
}

// @mixins
//
// We use this mixin to add label size styles.
// $padding - Used to determine label padding. Default: $label-padding || rem-calc(3 10 4) !default
// $text-size - Used to determine label text-size. Default: $text-size found in settings
@mixin label-size($padding:$label-padding, $text-size:$label-font-sizing) {
  @if $padding { @include unit(padding, $label-padding); }
  @if $text-size { @include unit(font-size, $label-font-sizing); }
}

// @mixins
//
// We use this mixin to add label styles.
// $bg - Default: $primary-color (found in settings file)
// $radius - Default: false, Options: true, sets radius to $global-radius (found in settings file)
@mixin label-style($bg: true, $radius:false) {

  // We control which background color comes through
  @if $bg {
		
		// adding a fallback color
		@include yiq-contrasted($label-default-bg);
		
		// adding a color list
		@for $c from 1 through length($colors-name) {

			&.#{nth($colors-name, $c)} {
		    @include yiq-contrasted(nth($colors-define, $c));
			}

		}

    &.alert { @include yiq-contrasted($alert-color); }
    &.success { @include yiq-contrasted($success-color); }
    &.info { @include yiq-contrasted($info-color); }

  }

  // We use this to control the radius on labels.
  @if $radius == true { @include radius($label-radius); }
  @else if $radius { @include radius($radius); }

}

// @mixins
//
// We use this to add close buttons to alerts
// $padding - Default: $label-padding,
// $text-size - Default: $label-font-sizing,
// $bg - Default: $primary-color(found in settings file)
// $radius - Default: false, Options: true which sets radius to $global-radius (found in settings file)
@mixin label($padding:$label-padding, $text-size:$label-font-sizing, $bg:$colors-name, $radius:false) {

  @include label-base;
  @include label-size($padding, $text-size);
  @include label-style($bg, $radius);
}

@if $use-label {
  .label {
    @include label-base;
    @include label-size;
    @include label-style;
		
    &.radius { @include label-style(false, true); }
    &.round { @include label-style(false, $radius:1000px); }

  }
}
