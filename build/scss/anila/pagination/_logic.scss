@import "vars";

<<<<<<< HEAD
=======
// for easier reading unminified css
/*
==========================================================================
 PAGINATIONS
==========================================================================
*/

>>>>>>> origin/development

@mixin pagination-base($display: $pagination-display, $selector: $pagination-selector) {
	margin-#{$default-float}: 0;

	#{$selector} {
		display: $display;
		list-style: none;
	  @include unit(margin-#{$default-float}, $pagination-spacing);
	  &:first-child {
	  	margin-#{$default-float}: 0;
	  }
	  a {
	  	text-decoration: $pagination-text-decor;
	  }
	}
}

<<<<<<< HEAD
@mixin pagination-theme($color: $color-list, $style: $theme-list) {
	.pagination {
		@each $i in $color {
			&.#{nth($i, 1)} {
				a {
					@include button-base(inline-block);
					@include yiq-contrasted(nth($i, 2));
	        @include single-transition(background-color, 200ms, ease-in-out);
	        &:hover {
	          $hover-color: darken(nth($i, 2), 5%);
	          background-color: $hover-color;
	        }
	        &:active {
	          $active-color: darken(nth($i, 2), 10%);
	          background-color: $active-color;
	        }
				}
		    @each $bs in $style {
		      &.#{nth($bs, 1)} {
		        // flat design
		        @if #{nth($bs, 1)} == flat {
		        	a {
			          @include anila-button($btn-color: nth($i, 2), $style: flat);
		        	}
		        }
		        // pretty design
		        @if #{nth($bs, 1)} == pretty {
		        	a {
			          @include anila-button($btn-color: nth($i, 2), $style: pretty, $gradient-type: overlay);
		        	}
		        }
		        // shiny design
		        @if #{nth($bs, 1)} == shiny {
		        	a {
			          @include anila-button($btn-color: nth($i, 2), $style: shiny, $gradient-type: normal);
		        	}
		       }
		         // bordered design
		        @if #{nth($bs, 1)} == bordered {
		        	a {
			          @include anila-button($btn-color: nth($i, 2), $style: bordered, $gradient-type: normal);
		        	}
		        }
		      }
		    }
			}
		}
		// end creating color & theme
=======
@mixin pagination-theme {
  @for $c from 1 through length($colors-name) {
    &.#{nth($colors-name, $c)} {
    	a {
	      @include yiq-contrasted(nth($colors-define, $c));
	      text-decoration: none;
    	}
    }
  }
	@for $c from 1 through length($colors-name) {
		&.#{nth($colors-name, $c)} {
    	a {
        @include theme-setup($color: nth($colors-define, $c), $theme: flat, $hover: true, $transition: true, $button: true);
    	}
	    @for $t from 1 through length($themes) {
	      &.#{nth($themes, $t)} {
	        // candy design
	        @if nth($themes, $t) == candy {
	        	a {
              @include theme-setup($color: nth($colors-define, $c), $theme: candy, $hover: true, $transition: true, $button: true);
	        	}
	        }
	        // shiny design
	        @if nth($themes, $t) == shiny {
	        	a {
              @include theme-setup($color: nth($colors-define, $c), $theme: shiny, $hover: true, $transition: true, $button: true);
	        	}
	       }
	         // bordered design
	        @if nth($themes, $t) == bordered {
	        	a {
              @include theme-setup($color: nth($colors-define, $c), $theme: bordered, $hover: true, $transition: true, $button: true);
	        	}
	        }
	      }
	    }
		}
>>>>>>> origin/development

	}
}

@mixin pagination-size ($selector: $pagination-selector ,$pagination-size: $button-size-list) {
  // creating sizes
  #{$pagination-selector} {
  	a {
		  @include button-size($button-md);
  	}
  }
  @each $bz in $pagination-size {
    &.#{nth($bz, 1)} {
		  #{$pagination-selector} {
		  	a {
		      @include button-size(nth($bz, 2), false, false);
		  	}
		  }
    }
  }
}


<<<<<<< HEAD
@include exports("pagination") {
	@if $use-pagination {
		.pagination {
			@include pagination-base($pagination-display, $pagination-selector);
			@include pagination-size($button-size-list);
		}
=======
@if $use-pagination {
	.pagination {
		@include pagination-base($pagination-display, $pagination-selector);
		@include pagination-size($button-size-list);
>>>>>>> origin/development
		@if $use-pagination-theme {
			@include pagination-theme;
		}
	}
}